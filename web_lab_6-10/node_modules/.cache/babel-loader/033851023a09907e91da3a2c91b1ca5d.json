{"ast":null,"code":"import _objectSpread from \"/Users/Vlad/second-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/Vlad/second-app/src/components/structure/Cataloge/CatalogePage.js\";\nimport React from \"react\";\nimport Box from \"@mui/system/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport AnimalCard from \"/Users/Vlad/second-app/src/components/reusable/AnimalCard.js\";\nimport { centeredContainer } from \"./components/styles\";\nimport Typography from \"@mui/material/Typography\";\nimport { FilterBlock } from \"/Users/Vlad/second-app/src/components/structure/Cataloge/FilterBlock.js\";\nvar koalaImg = require(\"/Users/Vlad/second-app/src/assets/koala.jpg\");\nvar lionImg = require(\"/Users/Vlad/second-app/src/assets/lion.jpg\");\nvar lemurImg = require(\"/Users/Vlad/second-app/src/assets/lemur.jpg\");\nvar asianLemurImg = require(\"/Users/Vlad/second-app/src/assets/asian_lemur.jpg\");\nvar data = [[koalaImg, \"Koala\", \"The koala or, inaccurately, koala bear (Phascolarctos cinereus) is an arboreal herbivorous marsupial native to Australia. It is the only extant representative of the family Phascolarctidae.\", 120], [lionImg, \"Lion\", \"The lion (Panthera leo) is a large cat of the genus Panthera native to Africa and India. It has a muscular, broad-chested body, short, rounded head, round ears, and a hairy tuft at the end of its tail. \", 324], [lemurImg, \"Lemur\", \"They are endemic to the island of Madagascar. Most existing lemurs are small, have a pointed snout, large eyes, and a long tail. They chiefly live in trees and are active at night.\", 234], [asianLemurImg, \"Asian Lemur\", \"Their closest evolutionary relatives are primates. There are just two living species of colugos: the Sunda flying lemur (Galeopterus variegatus) and the Philippine flying lemurs.\", 100]];\nfunction Catalog() {\n  var _this = this;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {\n    sx: _objectSpread({}, centeredContainer, {\n      pt: 1\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    mb: \"5px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, \"Filters\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    sx: {\n      mb: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FilterBlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    mb: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, \"Catalog\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    sx: {\n      justifyContent: \"space-between\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, data.map(function (record, id) {\n    return /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      key: record.filmTitle + id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(AnimalCard, {\n      imgSrc: record.imgSrc,\n      imgAlt: record.imgSrc,\n      filmTitle: record.filmTitle,\n      description: record.description,\n      price: record.price,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 29\n      }\n    }));\n  }))));\n}\nexport default Catalog;","map":{"version":3,"names":["React","Box","Grid","AnimalCard","centeredContainer","Typography","FilterBlock","koalaImg","require","lionImg","lemurImg","asianLemurImg","data","Catalog","pt","mb","justifyContent","map","record","id","filmTitle","imgSrc","description","price"],"sources":["/Users/Vlad/second-app/src/components/structure/Cataloge/CatalogePage.js"],"sourcesContent":["import React from \"react\";\nimport Box from \"@mui/system/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport AnimalCard from \"/Users/Vlad/second-app/src/components/reusable/AnimalCard.js\";\nimport { centeredContainer } from \"./components/styles\";\nimport Typography from \"@mui/material/Typography\";\nimport { FilterBlock } from \"/Users/Vlad/second-app/src/components/structure/Cataloge/FilterBlock.js\";\n\nconst koalaImg = require(\"/Users/Vlad/second-app/src/assets/koala.jpg\");\nconst lionImg = require(\"/Users/Vlad/second-app/src/assets/lion.jpg\");\nconst lemurImg = require(\"/Users/Vlad/second-app/src/assets/lemur.jpg\");\nconst asianLemurImg = require(\"/Users/Vlad/second-app/src/assets/asian_lemur.jpg\");\n\nconst data = [\n    [koalaImg, \"Koala\", \"The koala or, inaccurately, koala bear (Phascolarctos cinereus) is an arboreal herbivorous marsupial native to Australia. It is the only extant representative of the family Phascolarctidae.\", 120],\n    [lionImg, \"Lion\", \"The lion (Panthera leo) is a large cat of the genus Panthera native to Africa and India. It has a muscular, broad-chested body, short, rounded head, round ears, and a hairy tuft at the end of its tail. \", 324],\n    [lemurImg, \"Lemur\", \"They are endemic to the island of Madagascar. Most existing lemurs are small, have a pointed snout, large eyes, and a long tail. They chiefly live in trees and are active at night.\", 234],\n    [asianLemurImg, \"Asian Lemur\", \"Their closest evolutionary relatives are primates. There are just two living species of colugos: the Sunda flying lemur (Galeopterus variegatus) and the Philippine flying lemurs.\", 100]\n\n];\nfunction Catalog() {\n    return (\n        <>\n            <Box sx={{ ...centeredContainer, pt: 1 }}>\n                <Typography variant=\"h5\" mb=\"5px\">\n                    Filters\n                </Typography>\n                <Grid container sx={{ mb: 5 }}>\n                    <FilterBlock />\n                </Grid>\n                <Typography variant=\"h5\" mb=\"10px\">\n                    Catalog\n                </Typography>\n                <Grid container spacing={2} sx={{ justifyContent: \"space-between\" }}>\n                    {data.map((record, id) => (\n                        <Grid item key={record.filmTitle + id}>\n                            <AnimalCard\n                                imgSrc={record.imgSrc}\n                                imgAlt={record.imgSrc}\n                                filmTitle={record.filmTitle}\n                                description={record.description}\n                                price={record.price}\n                            />\n                        </Grid>\n                    ))}\n                </Grid>\n            </Box>\n        </>\n    );\n}\n\nexport default Catalog;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,iBAAiB;AACjC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,UAAU,MAAM,8DAA8D;AACrF,SAASC,iBAAiB,QAAQ,qBAAqB;AACvD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,WAAW,QAAQ,yEAAyE;AAErG,IAAMC,QAAQ,GAAGC,OAAO,CAAC,6CAA6C,CAAC;AACvE,IAAMC,OAAO,GAAGD,OAAO,CAAC,4CAA4C,CAAC;AACrE,IAAME,QAAQ,GAAGF,OAAO,CAAC,6CAA6C,CAAC;AACvE,IAAMG,aAAa,GAAGH,OAAO,CAAC,mDAAmD,CAAC;AAElF,IAAMI,IAAI,GAAG,CACT,CAACL,QAAQ,EAAE,OAAO,EAAE,+LAA+L,EAAE,GAAG,CAAC,EACzN,CAACE,OAAO,EAAE,MAAM,EAAE,4MAA4M,EAAE,GAAG,CAAC,EACpO,CAACC,QAAQ,EAAE,OAAO,EAAE,sLAAsL,EAAE,GAAG,CAAC,EAChN,CAACC,aAAa,EAAE,aAAa,EAAE,oLAAoL,EAAE,GAAG,CAAC,CAE5N;AACD,SAASE,OAAO,GAAG;EAAA;EACf,oBACI,uDACI,oBAAC,GAAG;IAAC,EAAE,oBAAOT,iBAAiB;MAAEU,EAAE,EAAE;IAAC,EAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACrC,oBAAC,UAAU;IAAC,OAAO,EAAC,IAAI;IAAC,EAAE,EAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,aAEpB,eACb,oBAAC,IAAI;IAAC,SAAS;IAAC,EAAE,EAAE;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC1B,oBAAC,WAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACZ,eACP,oBAAC,UAAU;IAAC,OAAO,EAAC,IAAI;IAAC,EAAE,EAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,aAErB,eACb,oBAAC,IAAI;IAAC,SAAS;IAAC,OAAO,EAAE,CAAE;IAAC,EAAE,EAAE;MAAEC,cAAc,EAAE;IAAgB,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC/DJ,IAAI,CAACK,GAAG,CAAC,UAACC,MAAM,EAAEC,EAAE;IAAA,oBACjB,oBAAC,IAAI;MAAC,IAAI;MAAC,GAAG,EAAED,MAAM,CAACE,SAAS,GAAGD,EAAG;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAClC,oBAAC,UAAU;MACP,MAAM,EAAED,MAAM,CAACG,MAAO;MACtB,MAAM,EAAEH,MAAM,CAACG,MAAO;MACtB,SAAS,EAAEH,MAAM,CAACE,SAAU;MAC5B,WAAW,EAAEF,MAAM,CAACI,WAAY;MAChC,KAAK,EAAEJ,MAAM,CAACK,KAAM;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EACtB,CACC;EAAA,CACV,CAAC,CACC,CACL,CACP;AAEX;AAEA,eAAeV,OAAO"},"metadata":{},"sourceType":"module"}